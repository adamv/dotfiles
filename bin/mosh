#!/usr/bin/env python

import sys, os
import re
from subprocess import Popen, PIPE

def run(command, print_command=False):
    if print_command: print command
    p = Popen(command, shell=True, stdout=PIPE)
    child_stdout = p.stdout
    result = p.wait()
    output = child_stdout.read()
    return (result, output)

usage="""Usage:
  mount_ssh [user@]hostname[:/[additional_path]] [volume_name] [mount_point] 

volume_name will default to <hostname>
mount_point will default to ~/.mounts/<hostname>
"""

MOUNT_PREFIX = os.environ.get("MOUNT_PREFIX", "~/.mounts/")


RE_TARGET = r"^(\S+\@)?(\S+)(\:\/\S*)?$"

_script_name = sys.argv.pop(0)

if not (1 <= len(sys.argv) <=3):
  print usage
  sys.exit(101)

target = sys.argv.pop(0)
m = re.search(RE_TARGET, target)
if not m:
  print "Invalid target \"%s\"" % target
  sys.exit(102)

hostname = m.group(2)
targetpath = m.group(3)
if not targetpath:
  target += ":/"

volume_name = hostname
mount_point = MOUNT_PREFIX+hostname

if len(sys.argv) == 1:
  volume_name = sys.argv[0]
elif len(sys.argv) == 2:
  volume_name, mount_point = sys.argv

run("mkdir -p %s" % (mount_point))

sshs_cmd = "sshfs %s %s -oauto_cache,reconnect,volname=%s" % (target, mount_point, volume_name)

# _ignore, drive_icon = run("drive_icon %s" % (hostname))
# drive_icon = drive_icon.strip()
# if drive_icon:
#   drive_icon = os.path.expanduser(drive_icon)
#   drive_icon = os.path.abspath(drive_icon)
#   sshs_cmd += " -omodules=volicon -oiconpath=\"%s\"" % (drive_icon, )

run(sshs_cmd, True)
